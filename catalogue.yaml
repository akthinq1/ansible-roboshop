- name: configure catalogue server
  hosts: catalogue
  become: yes

  tasks:
  - name: disable node js
    ansible.builtin.command: dnf module disable nodejs -y

  - name: enable nodejs 20
    ansible.builtin.command: dnf module enable nodejs:20 -y

  - name: install nodejs
    ansible.builtin.dnf:
      name: nodejs
      state: present
  
  - name: create system user
    ansible.builtin.user:
    shell: /sbin/nologin
    home: /app
    system: true

  - name: create directory
    ansible.builtin.file:
    path: /app
    state: directory
  
  - name: download code file
    ansible.builtin.get_url:
    url: https://roboshop-artifacts.s3.amazonaws.com/catalogue-v3.zip
    dest: /tmp/catalogue.zip

  - name: exctract catalogue code
    ansible.builtin.unarchive:
    src: /tmp/catalogue.zip
    dest: /app
    remote_src: yes
  
  - name: install npm pack
    community.general.npm:
      path: /app

  - name: copy catalogue service
    ansible.builtin.copy:
    src: catalogue.service
    dest: /etc/systemd/system/catalogue.service

  - name: demon reload
    ansible.builtin.systemd_service:
      daemon_reload: true

  
  - name: start catalogue service
    ansible.builtin.service:
      name: catalogue
      state: started
      enabled: yes

  - name: setup monogdb client / copy mongo repo
    ansible.builtin.copy:
      src: mongo.repo
      dest: /etc/yum.repos.d/mongo.repo

  - name: install mongodb client
    ansible.builtin.dnf:
      name: mongodb-mongosh
      state: present

  - name: check products loaded or not
    ansible.builtin.command: mongosh --host mongodb.akdevops.fun --eval 'db.getMongo().getDBNames().indexOf("catalogue")'
    register: catalogue_output

  - name: print catalogue output
    ansible.builtin.debug:
      msg: "{{ catalogue_output }}"

  - name: load products
    ansible.builtin.shell: mongosh --host mongodb.akdevops.fun < /app/db/master-data.js
    when: catalogue_output.stdout | int < 0